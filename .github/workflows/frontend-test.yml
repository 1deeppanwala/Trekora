name: Frontend Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js and pnpm
      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
      
      # Step 3: Install pnpm globally and install dependencies
      - name: Install pnpm and dependencies
        run: |
          npm install -g pnpm
          pnpm install

      # Step 4: Run tests (assuming you have tests defined)
      - name: Run frontend tests
        run: pnpm run check  # Assuming you have a `check` script that runs your tests or checks

  docker-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t frontend-test-app -f Frontend/Dockerfile .
      
      # Step 4: Run the Docker container (if you need to run it for testing)
      - name: Run Docker container
        run: |
          docker run -d -p 3000:3000 frontend-test-app
          sleep 10  # Wait for the app to start up

      # Step 5: Verify the app is running (you can modify this for specific checks)
      - name: Verify frontend is working
        run: |
          curl --fail http://localhost:3000 || exit 1  # Check if the app is running correctly

      # Step 6: Clean up Docker containers
      - name: Clean up
        run: docker system prune -af
